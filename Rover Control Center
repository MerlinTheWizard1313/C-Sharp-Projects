Program.cs
using System;

namespace RoverControlCenter
{
  class Program
  {
    static void Main(string[] args)
    {
      MoonRover lunokhod = new MoonRover("Lunokhod 1", 1970);
      MoonRover apollo = new MoonRover("Apollo 15", 1971);
      MarsRover sojourner = new MarsRover("Sojourner", 1997);
      Satellite sputnik = new Satellite("Sputnik", 1957); 

      //Rover[] missions = {lunokhod, apollo, sojourner};
      //DirectAll(missions);

      Object olunokhod = lunokhod;
      Object oapollo = apollo;
      Object osojourner = sojourner;
      Object osputnik = sputnik;

      Object[] objects = {olunokhod, oapollo, osojourner, osputnik};

      foreach (Object o in objects)
      {
        Console.WriteLine($"Tracking a {o.GetType()}...");
      }

      IDirectable ilunokhod = lunokhod;
      IDirectable iapollo = apollo;
      IDirectable isojourner = sojourner;
      IDirectable isputnik = sputnik;

      IDirectable[] probes = {ilunokhod, iapollo, isojourner, isputnik};

      DirectAll(probes);

    }

    public static void DirectAll(IDirectable[] array)
    {
      foreach(IDirectable r in array)
      {
        Console.WriteLine(r.GetInfo());
        Console.WriteLine(r.Explore());
        Console.WriteLine(r.Collect());
      }
    }
  }
}
Interface.cs
namespace RoverControlCenter
{
  interface IDirectable
  {
    string GetInfo();
    string Explore();
    string Collect();
  }
}
Rover.cs
namespace RoverControlCenter
{
  class Rover: IDirectable
  {
    public string Alias
    { get; private set; }

    public int YearLanded
    { get; private set; }

    public Rover(string alias, int yearLanded)
    {
      Alias = alias;
      YearLanded = yearLanded;
    }

    public string GetInfo()
    {
      return $"Alias: {Alias}, YearLanded: {YearLanded}";
    }

    public virtual string Explore()
    {
      return "Rover is exploring the surface!";
    }

    public virtual string Collect()
    {
      return "Rover is collecting rocks!";
    }
  }
}
Satellite.cs
namespace RoverControlCenter
{
  class Satellite : IDirectable
  {
    public string Alias
    { get; private set; }

    public int YearLaunched
    { get; private set; }

    public Satellite(string alias, int yearLaunched)
    {
      Alias = alias;
      YearLaunched = yearLaunched;
    }

    public string GetInfo()
    {
      return $"Alias: {Alias}, YearLaunched: {YearLaunched}";
    }

    public virtual string Explore()
    {
      return "Satellite is exploring the far reaches of space!";
    }

    public virtual string Collect()
    {
      return "Satellite is collecting photographic evidence!";
    }
  }
}
